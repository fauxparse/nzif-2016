.registration-steps {
  padding-top: 1rem;

  li {
    > * {
      display: block;
      padding: .75rem 1rem .75rem 3rem;
      position: relative;
      line-height: 1.5rem;
      opacity: .5;
      color: white;

      &::before {
        @include position(absolute, .5rem null null 0rem);
        @include size(2rem);
        padding: .5rem;
        border-radius: 50%;
        background: white;
        content: "";
        font: normal 1rem/1 $icon-font;
        text-align: center;
        vertical-align: middle;
        color: $header-background-color;
      }
    }

    > a:hover {
      opacity: .75;
    }

    &.complete > *::before { content: "done"; }

    &.current > *,
    &.current > a:hover {
      opacity: 1;
      &::before { content: "mode_edit"; }
    }
  }

  @include media($medium-screen) {
    display: flex;
    margin: 0 (-$small-spacing);
    justify-content: flex-start;

    li {
      margin: 0 $small-spacing;

      > * {
        padding: 1rem 1rem 1rem 3.5rem;

        &::before {
          @include size(2.5rem);
          font-size: 1.5rem;
        }
      }
    }
  }
}

.registration-user-details {
  > .inner {
    .existing-user {
      .buttons {
        display: flex;
        justify-content: space-between;
        align-items: center;

        a {
          text-align: center;
          padding: 0 $small-spacing;
          line-height: 1.25;
        }
      }
    }

    @include media($medium-screen) {
      display: flex;
      flex-wrap: wrap;
      align-items: flex-start;

      .intro {
        width: 100%;
        margin-bottom: $base-spacing;
      }

      .new-user {
        flex: 2;
      }

      .existing-user {
        flex: 1;
        margin-left: $base-spacing;
        padding: $small-spacing;
        background: $secondary-background-color;
        border-radius: $base-border-radius;
        border: $base-border;

        label {
          display: none;
        }
      }
    }

    @include media($large-screen) {
      .passwords {
        display: flex;

        .field {
          flex: 1;

          &:not(:first-child) {
            padding-left: $small-spacing;
          }

          &:not(:last-child) {
            padding-right: $small-spacing;
          }
        }
      }
    }
  }
}

.package-selection {
  .packages {
    margin: 0 0 $base-spacing;

    li {
      border-bottom: $base-border;

      &:first-child {
        border-top: $base-border;
      }

      input {
        display: none;
      }

      .description {
        flex: 1;
        padding: 0 1rem;
      }

      svg {
        @include size(2.5rem);
        cursor: pointer;

        circle, polyline {
          stroke: $secondary-color;
          transition: stroke $base-duration $base-timing;
        }

        polyline {
          stroke-dasharray: 28;
          stroke-dashoffset: 28;
        }
      }

      :checked ~ label svg {
        circle, polyline {
          stroke: $base-font-color;
        }

        polyline {
          stroke-dashoffset: 0;
          transition-property: stroke, stroke-dashoffset;
        }
      }

      h4 {
        font-size: 1.25rem;
        margin: 0;
        font-weight: $light-font-weight;
      }

      p {
        color: $secondary-color;
        margin: 0;
      }

      .price {
        font-size: 1.5rem;
      }

      label {
        display: flex;
        position: relative;
        padding: .5rem 0;
        font-weight: $base-font-weight;
        align-items: center;
      }
    }
  }
}
